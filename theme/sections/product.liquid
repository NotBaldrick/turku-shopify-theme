{% assign current_variant = product.selected_or_first_available_variant %}
{% assign featured_image = current_variant.featured_image | default: product.featured_image %}

<div
  id="{{ section.id }}"
  class="container grid grid-cols-1 lg:grid-cols-2 gap-4 md:gap-8"
>
  <tall-image-gallery class="{{ section.settings.gallery_side }}">
    <img
      id="main-image"
      class="w-full border-4 border-neutral rounded-xl mb-4 lg:mb-8 shadow-xl"
      src="{{ featured_image | img_url: 'grande' }}"
      alt="{{ featured_image.alt | escape }}"
    >
    {% if product.images.size > 1 %}
      <section class="collapse lg:collapse-open overflow-visible" tabindex="0">
        <input class="absolute opacity-0" type="checkbox"> 
        <div class="lg:hidden collapse-title text-2xl font-medium mb-2 border-4 border-neutral bg-base-100 rounded-xl shadow-xl flex items-center justify-between p-4">
          <span>Show Images</span>
          {% render 'icon'
            type: 'plus',
            class: 'w-8 h-8 mt-0.5 collapse-icon-off'
          %}
          {% render 'icon'
            type: 'minus',
            class: 'w-8 h-8 mt-0.5 collapse-icon-on'
          %}
        </div>
        <div
          id="image-picker-container"
          class="collapse-content grid grid-cols-2 gap-4 lg:gap-8 p-0"
        >
          {% for image in product.images %}
          {% if forloop.first == true %}
            {% assign selectedImageClasses = 'border-primary pointer-events-none' %}
          {% else %}
            {% assign selectedImageClasses = 'border-neutral cursor-pointer scale-100 hover:scale-105 duration-500' %}
          {% endif %}
          <figure 
            class="w-full aspect-square rounded-xl overflow-hidden border-4 {{ selectedImageClasses }} bg-base-100 relative transition-all shadow-xl"
            data-image-src="{{ image.src | img_url: 'grande' }}"
            data-image-alt="{{ image.alt | escape }}"
            data-index="{{ forloop.index0 }}"
          >
            <img
              class="w-full h-full object-cover object-center z-50 opacity-100 hover:opacity-0 transition-opacity duration-500 absolute top-0 left-0"
              src="{{ image.src | img_url: 'large' }}"
              alt="{{ image.alt | escape }}"
            >
            <img
              class="w-full h-full object-contain object-center p-2"
              src="{{ image.src | img_url: 'large' }}"
              alt="{{ image.alt | escape }}"
            >
          </figure>
          {% endfor %}
        </div>
      </section>
    {% endif %}
  </tall-image-gallery>
  <section class="h-fit flex flex-col gap-4 md:gap-8 p-4 bg-base-100 border-4 border-neutral rounded-xl shadow-xl">
    {% for block in section.blocks %}
      {% case block.type %}
        {% when 'product_name' %}
          <h1 class="text-2xl font-bold">
            {{ product.title }}
          </h1>
        {% when 'product_price' %}
          <div class="text-2xl font-semibold flex justify-between">
            <div>
              <span class="mr-1">{{ current_variant.price | money }}</span>
              <span class="line-through text-error">{{ product.compare_at_price | money }}</span>
            </div>
            {% if current_variant.available %}
              <span class="flex items-center gap-2">
                In Stock
                {% render 'icon',
                  type: 'check-circle',
                  class: 'w-7 h-7 mt-0.5 text-success'
                %}
              </span>
            {% else %}
              <span class="flex items-center gap-2">
                Sold Out
                {% render 'icon',
                  type: 'x-circle',
                  class: 'w-7 h-7 mt-0.5 text-error'
                %}
              </span>
            {% endif %}
          </div>
        {% when 'product_options' %}
          <form
            id="product-options"
            class="flex flex-col gap-2"
          >
            {% for product_option in product.options_with_values %}
              <div class="form-control w-full max-w-xs">
                <label for="{{ product_option.name }}" class="label">
                  <span class="label-text">
                    {{ product_option.name }}
                  </span>
                </label>
                <select
                  id="{{ product_option.name }}"
                  name="{{ product_option.name }}"
                  class="select select-md"
                >
                  {% for value in product_option.values %}
                    <option
                      {% if product_option.selected_value == value %}
                        selected
                      {% endif %}
                    >
                      {{ value }}
                    </option>
                  {% endfor %}
                </select>
              </div>
            {% endfor %}
          </form>
        {% when 'product_actions' %}
          <button
            id="add-to-cart-button"
            data-cart-add="{{ current_variant.id }}"
            class="btn btn-primary btn-outline btn-xl text-lg gap-2 w-full"
            {% unless current_variant.available %}
              disabled
            {% endunless %}
          >
            {% render 'icon'
              type: 'shopping-bag',
              class: 'w-6 h-6 mb-0.5'
            %}
            Add to Cart
          </button>
        {% when 'product_description' %}
          <div>
            <h1 class="text-2xl font-bold mb-4">
              Description
            </h1>
            {{ product.description }}
          </div>
      {% endcase %}
    {% endfor %}
  </section>
</div>

<script>
(function() {
  const variants = [
    {% for variant in product.variants %}
      {
        id: "{{ variant.id }}",
        options: [
          "{{ variant.option1 }}",
          "{{ variant.option2 }}",
          "{{ variant.option3 }}"
        ]
      },
    {% endfor %}
  ];
  
  const sectionID = "{{ section.id }}";
  const el = document.getElementById(sectionID);
  const productOptions = el.querySelector("#product-options");
  const addToCartButton = el.querySelector("#add-to-cart-button");

  productOptions.addEventListener("change", (event) => {
    const formData = new FormData(event.currentTarget);

    let formValues = "";
    for (const value of formData.values()) {
      formValues = formValues + value
    }

    const matchedVariant = variants.filter((variant) => variant.options.join("") === formValues);

    addToCartButton.dataset.cartAdd = matchedVariant[0].id;
  })
})();
</script>

<script>
customElements.define("tall-image-gallery", class extends HTMLElement {
  constructor() {
    super();
  }

  connectedCallback() {
    this._mainImageEl = this.querySelector("#main-image");
    this._imagePickerContainerEl = this.querySelector("#image-picker-container");
    this._imagePickersEL = Array.from(this._imagePickerContainerEl.children);
    this._currentSelectedImageEl = this._imagePickersEL[0];
    
    this._imagePickersEL.forEach((image) => {
      image.addEventListener("click", this.onClick.bind(this));
    });
  }

  disconnectedCallback() {
    this._imagePickersEL.forEach((image) => {
      image.removeEventListener("click", this.onClick.bind(this));
    });
	}

  onClick(event) {
    const el = event.currentTarget;
    const imgSrc = el.dataset.imageSrc;
    const imgAlt = el.dataset.imageAlt;
    const selectedClasses = ["border-primary", "pointer-events-none"];
    const notSelectedClasses = ["border-neutral", "cursor-pointer", "scale-100", "hover:scale-105", "transition-scale", "duration-500"]

    this._currentSelectedImageEl.classList.add(...notSelectedClasses);
    this._currentSelectedImageEl.classList.remove(...selectedClasses);
    el.classList.remove(...notSelectedClasses);
    el.classList.add(...selectedClasses);

    this._mainImageEl.src = imgSrc;
    this._mainImageEl.alt = imgAlt;

    this._currentSelectedImageEl = el;
  }
}); 
</script>

{% schema %}
{
  "name": "Product Details",
  "tag": "section",
  "settings": [
    {
      "type": "radio",
      "id": "gallery_side",
      "label": "Gallery Side",
      "info": "The side you want the gallery to be on.",
      "default": "order-0",
      "options": [
        {
          "value": "order-0",
          "label": "Left"
        },
        {
          "value": "order-1",
          "label": "Right"
        }
      ]
    }
  ],
  "max_blocks": 5,
  "blocks": [
    {
      "name": "Product Name",
      "type": "product_name"
    },
    {
      "name": "Product Price",
      "type": "product_price"
    },
    {
      "name": "Product Options",
      "type": "product_options"
    },
    {
      "name": "Product Actions",
      "type": "product_actions"
    },
    {
      "name": "Product Description",
      "type": "product_description"
    }
  ]
}
{% endschema %}